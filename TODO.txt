Language as a whole
- [ ] cast
- [ ] let without initializer, but with type, with checks that it gets initialized before use
- [ ] verify functions have a return on all paths, with a coherent type
- [ ] keep track of mutable/immutable variables

Semantic analysis

LLVM backend

Main
- [ ] create a main crate with clap and able to generate binary, or bytecode
- [ ] optimizations

Misc
- [ ] check can't use a variable in its declaration, i.e. `let x = x + 1`
- [ ] short circuit booleans
- [ ] break/continue in loops
- [ ] for loop
- [ ] for/else like in python?
- [ ] loop (infinite)
