Semantic analysis
- [ ] store function in the module symbol table (see last test in semantic_analyzer.rs)

LLVM backend

Language as a whole
- [ ] cast
- [ ] function calls
- [ ] let without initializer, but with type, with checks that it gets initialized before use
- [ ] verify functions have a return on all paths, with a coherent type
- [ ] keep track of mutable/immutable variables

Main
- [ ] create a main crate with clap and able to generate binary, or bytecode
- [ ] optimizations

ParseTree refactoring
- [x] unify Let with initializers or multiple
- [ ] one tree!
- [ ] create function typing phase
